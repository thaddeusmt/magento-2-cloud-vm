user  vagrant;
worker_processes  1;
pid /run/nginx.pid;

error_log  /var/log/nginx/error.log warn;

events {
  worker_connections 768;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;
    types_hash_max_size 2048;
    server_tokens off;

    # Disable buffering of the *request* (\o/ thanks nginx 1.7.1).
    proxy_request_buffering off;
    fastcgi_request_buffering off;
    # Do not limit the body size.
    client_max_body_size 0;
    client_body_buffer_size 128k;
    
    # Enable in-memory buffering of the *response*.
    proxy_buffering on;
    fastcgi_buffering on;
    # Increase the size of the initial buffer, used to read the response header.
    proxy_buffer_size 32k;
    fastcgi_buffer_size 32k;
    proxy_buffers 16 4k;
    fastcgi_buffers 16 4k;
    proxy_busy_buffers_size 32k;
    fastcgi_busy_buffers_size 32k;
    # Disable on-disk buffering.
    proxy_max_temp_file_size 0;
    fastcgi_max_temp_file_size 0;

    # Timeouts.
    # We timeout after 30s if the application cannot start processing the request...
    proxy_connect_timeout     30s;
    fastcgi_connect_timeout   30s;
    # ... but once the application started processing, we essentially never timeout.
    proxy_read_timeout        86400s;
    fastcgi_read_timeout      86400s;
    proxy_send_timeout        86400s;
    fastcgi_send_timeout      86400s;

    # Ignore all special upstream headers.
    proxy_ignore_headers X-Accel-Redirect X-Accel-Expires X-Accel-Limit-Rate
    X-Accel-Buffering X-Accel-Charset Expires Cache-Control Set-Cookie Vary;
    fastcgi_ignore_headers X-Accel-Redirect X-Accel-Expires X-Accel-Limit-Rate
    X-Accel-Buffering X-Accel-Charset Expires Cache-Control Set-Cookie Vary;

    client_body_temp_path /tmp/nginx/client_temp;
    proxy_temp_path /tmp/nginx/proxy_temp;
    fastcgi_temp_path /tmp/nginx/fastcgi_temp;
    uwsgi_temp_path /tmp/nginx/uwsgi_temp;
    scgi_temp_path /tmp/nginx/scgi_temp;
    
    #map $http_x_client_ssl $platform_server_port {
    #  "on"      443;
    #  default   80;
    #}
 
    # If the request has a Upgrade header, set Connection to "upgrade",
    # else force it as "Connection: close" to force the upstream to close the
    # connection.
    #map $http_upgrade $connection_upgrade {
    #  default upgrade;
    #  ''      close;
    #}
    
    upstream fastcgi_backend {
        # use tcp connection
        # server  127.0.0.1:9000;
        # or socket
        server   unix:/run/app.sock;
    }
    
    server {
        listen 80;
        server_name xterraplanet.vm;
        set $MAGE_ROOT /app;
        include /etc/nginx/magento.conf;
    }

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
}

